"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[2987],{7051:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"2.0.x","label":"2.0.x","banner":"unmaintained","badge":true,"className":"docs-version-2.0.x","isLast":false,"docsSidebars":{"version-2.0.x/docs":[{"type":"category","label":"Fundamentals","items":[{"type":"link","label":"About","href":"/react-native-reanimated/docs/2.0.x/","docId":"about"},{"type":"link","label":"Installation","href":"/react-native-reanimated/docs/2.0.x/installation","docId":"installation"},{"type":"link","label":"Worklets","href":"/react-native-reanimated/docs/2.0.x/worklets","docId":"worklets"},{"type":"link","label":"Shared Values","href":"/react-native-reanimated/docs/2.0.x/shared-values","docId":"shared-values"},{"type":"link","label":"Animations","href":"/react-native-reanimated/docs/2.0.x/animations","docId":"animations"},{"type":"link","label":"Events","href":"/react-native-reanimated/docs/2.0.x/events","docId":"events"},{"type":"link","label":"Architecture","href":"/react-native-reanimated/docs/2.0.x/architecture","docId":"architecture"},{"type":"link","label":"Migration from v1","href":"/react-native-reanimated/docs/2.0.x/migration","docId":"migration"},{"type":"link","label":"Web Support","href":"/react-native-reanimated/docs/2.0.x/web-support","docId":"web-support"},{"type":"link","label":"Troubleshooting","href":"/react-native-reanimated/docs/2.0.x/troubleshooting","docId":"troubleshooting"}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"category","label":"Animations","items":[{"type":"link","label":"cancelAnimation","href":"/react-native-reanimated/docs/2.0.x/api/cancelAnimation","docId":"api/cancelAnimation"},{"type":"link","label":"withDecay","href":"/react-native-reanimated/docs/2.0.x/api/withDecay","docId":"api/withDecay"},{"type":"link","label":"withDelay","href":"/react-native-reanimated/docs/2.0.x/api/withDelay","docId":"api/withDelay"},{"type":"link","label":"withRepeat","href":"/react-native-reanimated/docs/2.0.x/api/withRepeat","docId":"api/withRepeat"},{"type":"link","label":"withSequence","href":"/react-native-reanimated/docs/2.0.x/api/withSequence","docId":"api/withSequence"},{"type":"link","label":"withSpring","href":"/react-native-reanimated/docs/2.0.x/api/withSpring","docId":"api/withSpring"},{"type":"link","label":"withTiming","href":"/react-native-reanimated/docs/2.0.x/api/withTiming","docId":"api/withTiming"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Hooks","items":[{"type":"link","label":"useAnimatedGestureHandler","href":"/react-native-reanimated/docs/2.0.x/api/useAnimatedGestureHandler","docId":"api/useAnimatedGestureHandler"},{"type":"link","label":"useAnimatedProps","href":"/react-native-reanimated/docs/2.0.x/api/useAnimatedProps","docId":"api/useAnimatedProps"},{"type":"link","label":"useAnimatedReaction","href":"/react-native-reanimated/docs/2.0.x/api/useAnimatedReaction","docId":"api/useAnimatedReaction"},{"type":"link","label":"useAnimatedRef","href":"/react-native-reanimated/docs/2.0.x/api/useAnimatedRef","docId":"api/useAnimatedRef"},{"type":"link","label":"useAnimatedScrollHandler","href":"/react-native-reanimated/docs/2.0.x/api/useAnimatedScrollHandler","docId":"api/useAnimatedScrollHandler"},{"type":"link","label":"useAnimatedStyle","href":"/react-native-reanimated/docs/2.0.x/api/useAnimatedStyle","docId":"api/useAnimatedStyle"},{"type":"link","label":"useDerivedValue","href":"/react-native-reanimated/docs/2.0.x/api/useDerivedValue","docId":"api/useDerivedValue"},{"type":"link","label":"useSharedValue","href":"/react-native-reanimated/docs/2.0.x/api/useSharedValue","docId":"api/useSharedValue"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Native methods","items":[{"type":"link","label":"measure","href":"/react-native-reanimated/docs/2.0.x/api/nativeMethods/measure","docId":"api/nativeMethods/measure"},{"type":"link","label":"scrollTo","href":"/react-native-reanimated/docs/2.0.x/api/nativeMethods/scrollTo","docId":"api/nativeMethods/scrollTo"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Miscellaneous","items":[{"type":"link","label":"Interpolate","href":"/react-native-reanimated/docs/2.0.x/api/miscellaneous/interpolate","docId":"api/miscellaneous/interpolate"},{"type":"link","label":"runOnJS","href":"/react-native-reanimated/docs/2.0.x/api/miscellaneous/runOnJS","docId":"api/miscellaneous/runOnJS"},{"type":"link","label":"runOnUI","href":"/react-native-reanimated/docs/2.0.x/api/miscellaneous/runOnUI","docId":"api/miscellaneous/runOnUI"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"Testing with Jest","href":"/react-native-reanimated/docs/2.0.x/testing","docId":"testing"}],"collapsed":true,"collapsible":true}]},"docs":{"about":{"id":"about","title":"About React Native Reanimated","description":"This is a documentation website of Reanimated 2 stable release.","sidebar":"version-2.0.x/docs"},"animations":{"id":"animations","title":"Animations","description":"Animations are first-class citizens in Reanimated 2.","sidebar":"version-2.0.x/docs"},"api/cancelAnimation":{"id":"api/cancelAnimation","title":"cancelAnimation","description":"Cancels animation linked to given shared value.","sidebar":"version-2.0.x/docs"},"api/miscellaneous/interpolate":{"id":"api/miscellaneous/interpolate","title":"Interpolate","description":"Sometimes you need to map a value from one range to another. This is where you should use the interpolate function which approximates values between points in the output range and lets you map a value inside the input range to a corresponding approximation in the output range. It also supports a few types of Extrapolation to enable mapping outside the range.","sidebar":"version-2.0.x/docs"},"api/miscellaneous/runOnJS":{"id":"api/miscellaneous/runOnJS","title":"runOnJS","description":"When you call a function on the UI thread you can\'t be sure if you\'re calling a worklet or a callback from the JS thread. To make it more transparent we introduced runOnJS, which calls a callback asynchronously. An exception will be thrown if you call a JS callback without this function.","sidebar":"version-2.0.x/docs"},"api/miscellaneous/runOnUI":{"id":"api/miscellaneous/runOnUI","title":"runOnUI","description":"Enables executing worklet functions on the UI thread. Note that UI execution is asynchronous from the caller\u2019s perspective. When you pass arguments, they will be copied to the UI context.","sidebar":"version-2.0.x/docs"},"api/nativeMethods/measure":{"id":"api/nativeMethods/measure","title":"measure","description":"Determines the location on screen, width, and height of the given view. Note that these measurements are not available until after the rendering has been completed in native. If you need the measurements as soon as possible, consider using onLayout instead.","sidebar":"version-2.0.x/docs"},"api/nativeMethods/scrollTo":{"id":"api/nativeMethods/scrollTo","title":"scrollTo","description":"Provides synchronous scroll on the UI thread to a given offset using an animated ref to a scroll view. This allows performing smooth scrolling without lags (which might have otherwise occured when it was asynchronous and based on lots of events).","sidebar":"version-2.0.x/docs"},"api/useAnimatedGestureHandler":{"id":"api/useAnimatedGestureHandler","title":"useAnimatedGestureHandler","description":"This hook allows for defining worklet handlers that can serve in a process of handling gestures.","sidebar":"version-2.0.x/docs"},"api/useAnimatedProps":{"id":"api/useAnimatedProps","title":"useAnimatedProps","description":"This hook is a counterpart of useAnimatedStyle hook, but works for a non-style view properties.","sidebar":"version-2.0.x/docs"},"api/useAnimatedReaction":{"id":"api/useAnimatedReaction","title":"useAnimatedReaction","description":"useAnimatedReaction hook allows performing certain actions on some shared values\' change. The key idea is, all of the shared values included in the first worklet are the inputs set. Every time any of those change both worklets are triggered in the order specified above. Also the second worklet may modify any shared values excluding those used in the first worklet.","sidebar":"version-2.0.x/docs"},"api/useAnimatedRef":{"id":"api/useAnimatedRef","title":"useAnimatedRef","description":"This hook provides extended functionality of a standard ref. You can assign it to some component like ` and then access the target component via animatedRef.current. Besides, on the UI thread animated reference also contains the view tag of the target. It can be accessed like this: const viewTag = animatedRef(). This comes handy when using native methods like scrollTo and measure`.","sidebar":"version-2.0.x/docs"},"api/useAnimatedScrollHandler":{"id":"api/useAnimatedScrollHandler","title":"useAnimatedScrollHandler","description":"This is a convenience hook that returns an event handler reference which can be used with React Native\'s scrollable components.","sidebar":"version-2.0.x/docs"},"api/useAnimatedStyle":{"id":"api/useAnimatedStyle","title":"useAnimatedStyle","description":"This hook is one of the main elements of the new Reanimated v2 API.","sidebar":"version-2.0.x/docs"},"api/useDerivedValue":{"id":"api/useDerivedValue","title":"useDerivedValue","description":"This hook allows for creating shared value reference that can change in response to updating of one or more other shared values.","sidebar":"version-2.0.x/docs"},"api/useSharedValue":{"id":"api/useSharedValue","title":"useSharedValue","description":"Use this hook to create a reference to a JavaScript value that can be shared with worklets.","sidebar":"version-2.0.x/docs"},"api/withDecay":{"id":"api/withDecay","title":"withDecay","description":"Starts a velocity based \\"scroll\\" animation.","sidebar":"version-2.0.x/docs"},"api/withDelay":{"id":"api/withDelay","title":"withDelay","description":"Allows for the provided animation to start with a specified delay.","sidebar":"version-2.0.x/docs"},"api/withRepeat":{"id":"api/withRepeat","title":"withRepeat","description":"Repeats the provided animation several times.","sidebar":"version-2.0.x/docs"},"api/withSequence":{"id":"api/withSequence","title":"withSequence","description":"Runs the provided animations in a sequence.","sidebar":"version-2.0.x/docs"},"api/withSpring":{"id":"api/withSpring","title":"withSpring","description":"Starts a spring-based animation.","sidebar":"version-2.0.x/docs"},"api/withTiming":{"id":"api/withTiming","title":"withTiming","description":"Starts a time based animation.","sidebar":"version-2.0.x/docs"},"architecture":{"id":"architecture","title":"Reanimated\'s 2.x architecture","description":"Due to time constraints we weren\'t able to finish this page.","sidebar":"version-2.0.x/docs"},"events":{"id":"events","title":"Events","description":"In the real world nothing changes instantly\u2013there is always something between the states. When we touch a book we don\'t expect it to open instantly on a certain page. To make mobile apps feel more natural to the user, we use animations to smoothen out user interactions with the app user interface.","sidebar":"version-2.0.x/docs"},"guide/doc3":{"id":"guide/doc3","title":"This is Document Number 3","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac euismod odio, eu consequat dui. Nullam molestie consectetur risus id imperdiet. Proin sodales ornare turpis, non mollis massa ultricies id. Nam at nibh scelerisque, feugiat ante non, dapibus tortor. Vivamus volutpat diam quis tellus elementum bibendum. Praesent semper gravida velit quis aliquam. Etiam in cursus neque. Nam lectus ligula, malesuada et mauris a, bibendum faucibus mi. Phasellus ut interdum felis. Phasellus in odio pulvinar, porttitor urna eget, fringilla lectus. Aliquam sollicitudin est eros. Mauris consectetur quam vitae mauris interdum hendrerit. Lorem ipsum dolor sit amet, consectetur adipiscing elit."},"installation":{"id":"installation","title":"Installation","description":"Reanimated 2 is primarily built in C++ using Turbo Modules infrastructure which is not yet completely deployed in React Native (specifically on Android).","sidebar":"version-2.0.x/docs"},"migration":{"id":"migration","title":"Migrating from Reanimated 1.x","description":"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.","sidebar":"version-2.0.x/docs"},"shared-values":{"id":"shared-values","title":"Shared Values","description":"Shared Values are among the fundamental concepts behind Reanimated 2.0.","sidebar":"version-2.0.x/docs"},"testing":{"id":"testing","title":"Testing with Jest","description":"Reanimated test mocks use web implementation of Reanimated2. Before you begin using Reanimated mocks you need some setup actions.","sidebar":"version-2.0.x/docs"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting common problems","description":"TypeError: Cannot convert undefined value to object on someVariable._closure","sidebar":"version-2.0.x/docs"},"web-support":{"id":"web-support","title":"Web Support","description":"Since the","sidebar":"version-2.0.x/docs"},"worklets":{"id":"worklets","title":"Worklets","description":"The ultimate goal of worklets was for them to define small pieces of JavaScript code that we run when updating view properties or reacting to events on the UI thread. A natural construct in JavaScript for such a purpose was a simple method. With Reanimated 2 we spawn a secondary JS context on the UI thread that then is able to run JavaScript functions. The only thing that is needed is for that function to have the \u201cworklet\u201d directive at the top:","sidebar":"version-2.0.x/docs"}}}')}}]);